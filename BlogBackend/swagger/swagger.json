{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog API",
    "version": "1.0.0",
    "description": "API documentation for managing blogs"
  },
  "paths": {
    "/api/blogs": {
      "get": {
        "summary": "Get all blogs",
        "description": "Fetches all blogs from the database.",
        "responses": {
          "200": {
            "description": "List of blogs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Blog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new blog",
        "description": "Creates a new blog (Admin only).",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Blog created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/blogs/{id}": {
      "get": {
        "summary": "Get a single blog by ID",
        "description": "Fetches a single blog by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Blog ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Single blog",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Blog" }
              }
            }
          },
          "404": { "description": "Blog not found" }
        }
      },
      "put": {
        "summary": "Update a blog",
        "description": "Updates a blog by its ID (Admin only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Blog ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BlogInput" }
            }
          }
        },
        "responses": {
          "200": { "description": "Blog updated successfully" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Blog not found" }
        }
      },
      "delete": {
        "summary": "Delete a blog",
        "description": "Deletes a blog by its ID (Admin only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Blog ID"
          }
        ],
        "responses": {
          "200": { "description": "Blog deleted successfully" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Blog not found" }
        }
      }
    },
    "/api/signup": {
      "post": {
        "summary": "User Signup",
        "description": "Creates a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["name", "email", "password"]
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "User already exists"
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "User Login",
        "description": "Logs in an existing user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful login",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": { "type": "string" }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid email or password"
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Blog": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" },
          "author": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "email": { "type": "string" }
            }
          }
        }
      },
      "BlogInput": {
        "type": "object",
        "required": ["title", "content"],
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string" },
          "role": { "type": "string", "enum": ["admin", "public"], "default": "public" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
